# Clone scanner script
# Written by HelLViS69 (2005)
# Rewritten by LaCosa 23/3/2013

addon.register("HellClonescan","1.1","HelL Clonescan",$tr("A simple script for scanning clones in channels"),"3.2.0")
{
	# This is our uninstall callback: it will be called by KVIrc when addon.uninstall is invoked
	delpopupitem -d -q channeltextview 696968
	delpopupitem -d -q channeltextview 696969
	event(OnJoin,clonescan){}
	alias(hell_clonescan){}
	class(helltrixclone,object){}
	objects.killclass helltrixclone
	hell_clonescan_remove
	alias(hell_clonescan_remove){}
	# Done
}

# Ok, addon.register succeeded. We can go on with the installation.

# Get the path that this script was launched from
%mypath = $file.extractPath($0)

# get the installer helper class (this is pretty standard and included in the distro)
parse %mypath/utils/installer.kvs

# The installer will copy our files and generate automatically
# an uninstallation alias for them
%installer = $new(installer,0,myinstaller)
# copy files in each subdirectory
# the pics
%installer->$copyFiles("%mypath/pics/","*.png",$file.localdir("pics"))
# the translations
%installer->$copyFiles("%mypath/locale/","*.mo",$file.localdir("locale"))
# then generate the uninstall alias
%installer->$generateUninstallAlias("hell_clonescan_remove")
# finally kill the installer helper
delete %installer

# Script object
class(helltrixclone,object){
	constructor(){
		$$->%ArrayNick[] = $chan.users()
		$$->%NumNicks = $length($$->%ArrayNick)
		for(%i=0; %i < $$->%NumNicks; %i++){
			$$->%DbHost[%i]=$mask.host($mask($$->%ArrayNick[%i]))
		}
	}
	
	cloneCheck($0=nick,$1=host){
		%checkNick=$0
		%checkHost=$1
		if(!%checkNick){
			# Global scan
			%i_last=$($$->%NumNicks-1)
			for(%i=0; %i<%i_last; %i++){
				# If is marked as -1 then this is a clone, skip it
				if(!$$->%DbCloneNum[%i]){
					# Skip the nick previously parsed
					for(%j=$(%i+1); %j<$$->%NumNicks; %j++){
						if($str.cmp($$->%DbHost[%i],$$->%DbHost[%j])==0){
							if(0==$$->%DbCloneNum[%i]){
								$$->%DbCloneNick{$$->%ArrayNick[%i]}=$$->%ArrayNick[%i]", "$$->%ArrayNick[%j]
								$$->%DbCloneNum[%i]=2
							}else{
								$$->%DbCloneNick{$$->%ArrayNick[%i]}.=", "$$->%ArrayNick[%j]
								$$->%DbCloneNum[%i]++
							}
							# Puts a Mark on clone
							$$->%DbCloneNum[%j]=-1
						}
					}
				}
			}
		} else {		
			# Nick scan
			if(!%checkHost){
				# Just for sanity check
				echo -w=$active [BUG]: $tr("The system could not retrieve the host of",helltrix) %checkNick
				return
			} else {
				$$->%DbCloneNick{%checkNick} = $chan.users(,$mask(%checkNick,9),)
				if ($str.contains($$->%DbCloneNick{%checkNick},",")){
					$$->%DbCloneNick{%checkNick} = $str.replace($$->%DbCloneNick{%checkNick},',',", ")
				} else {
					$$->%DbCloneNick{%checkNick}=
				}
			}
		}
	}

	createWin(){
		# Environment creation
		if(!$window.exists(%Clone_win)){
			%Clone_win=$window.open(,$tr("Clones",helltrix) $chan.name,$context,113)
		}
		echo -w=%Clone_win $b$tr("Scanning for clones...",helltrix)
	}

	output($0=windowId,$1=nick){
		if ($0){
			%win=$0
		}else{
			%win=$channel
		}
		%checkNick=$1
		%cloneFound=0
		if(!%checkNick){
			# Output for global scan
			for(%i=0; %i<$$->%NumNicks; %i++){
				if($$->%DbCloneNum[%i]>1){
					echo -w=%win $b$$->%DbCloneNick{$$->%ArrayNick[%i]} $o$tr("on channel",helltrix) $b$chan.name $o$tr("have same mask",helltrix)$b "*!*@"$$->%DbHost[%i]
					%cloneFound++
				}
			}
			if(!%cloneFound){
				echo -w=%win $b$tr("No clones found on",helltrix) $chan.name
			}
		} else {
			# Output for nick scan
			if($$->%DbCloneNick{%checkNick}){
				echo -w=%win $b$$->%DbCloneNick{%checkNick} $o$tr("on channel",helltrix) $b$chan.name $o$tr("have same mask",helltrix) $b$mask(%checkNick,9)
				%cloneFound++
			}
		}

		if($0) echo -w=%win $b$tr("Scan End",helltrix)
	}
}
	
# Script Alias
alias(hell_clonescan)
{
	%clonescan=$new(helltrixclone)
	
	if(!$0){
		%clonescan->$createWin()
		%clonescan->$cloneCheck()
		%clonescan->$output(%Clone_win,)
	} else {
		# If we want a nick scan
		if(!$chan.ison($0,$channel)){
			echo $tr("Usage",helltrix): /helltrix_clonescan [nick]
			return
		}
		%isNick=$0
		%isHost=$mask(%isNick,9)
	
		%clonescan->$cloneCheck(%isNick,%isHost)
		%clonescan->$output(,%isNick)
	}
	
	# Clean object
	delete %clonescan
	# TODO:
	# language files
}

# Script Event
event(OnJoin,clonescan)
{
	hell_clonescan $0 $2
}

# Script Popups
defpopup -m ("channeltextview")
{
	label(HelLViS69 Clonescan,,696968)
	item("Clonescan",113,696969){
		hell_clonescan
	}
}
